# name: Sync Drizzle Schema on Merge

# on:
#   push:
#     branches:
#       - staging
#       - main

# jobs:
#   sync-schema:
#     runs-on: ubuntu-latest

#     steps:
#       - name: ⬇️ Checkout code
#         uses: actions/checkout@v3

#       - name: 🟢 Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 20

#       - name: 📦 Install dependencies
#         run: npm ci

#       - name: 🧪 Create .env file for DB connection
#         run: |
#           echo "Preparing .env file..."
#           if [ "${{ github.ref_name }}" = "main" ]; then
#             echo "DB_HOST=${{ secrets.PRODUCTION_DB_HOST }}" >> .env
#             echo "DB_PORT=${{ secrets.PRODUCTION_DB_PORT }}" >> .env
#             echo "DB_USERNAME=${{ secrets.PRODUCTION_DB_USERNAME }}" >> .env
#             echo "DB_PASSWORD=${{ secrets.PRODUCTION_DB_PASSWORD }}" >> .env
#             echo "DB_DATABASE=${{ secrets.PRODUCTION_DB_DATABASE }}" >> .env
#           else
#             echo "DB_HOST=${{ secrets.STAGING_DB_HOST }}" >> .env
#             echo "DB_PORT=${{ secrets.STAGING_DB_PORT }}" >> .env
#             echo "DB_USERNAME=${{ secrets.STAGING_DB_USERNAME }}" >> .env
#             echo "DB_PASSWORD=${{ secrets.STAGING_DB_PASSWORD }}" >> .env
#             echo "DB_DATABASE=${{ secrets.STAGING_DB_DATABASE }}" >> .env
#           fi

#       - name: 🧪 Pull remote schema
#         run: npx drizzle-kit pull --config=drizzle.config.ts

#       - name: 🔍 Generate schema diff
#         run: npx drizzle-kit generate --config=drizzle.config.ts

#       - name: 🚀 Push schema to DB
#         run: |
#           echo "Pushing schema to database..."
#           if ! npx drizzle-kit push --config=drizzle.config.ts; then
#             echo "❌ Push failed. Ensure the target DB is in sync and fix duplicate indexes or constraint issues."
#             exit 1
#           fi
name: Safe Drizzle Schema Sync

on:
  push:
    branches:
      - staging
      - main

jobs:
  sync-schema:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v3

      - name: 🔧 Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔐 Write DB credentials to .env
        run: |
          echo "Setting up environment..."
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "PRODUCTION DB detected"
            echo "DB_HOST=${{ secrets.PRODUCTION_DB_HOST }}" >> .env
            echo "DB_PORT=${{ secrets.PRODUCTION_DB_PORT }}" >> .env
            echo "DB_USERNAME=${{ secrets.PRODUCTION_DB_USERNAME }}" >> .env
            echo "DB_PASSWORD=${{ secrets.PRODUCTION_DB_PASSWORD }}" >> .env
            echo "DB_DATABASE=${{ secrets.PRODUCTION_DB_DATABASE }}" >> .env
          else
            echo "STAGING DB detected"
            echo "DB_HOST=${{ secrets.STAGING_DB_HOST }}" >> .env
            echo "DB_PORT=${{ secrets.STAGING_DB_PORT }}" >> .env
            echo "DB_USERNAME=${{ secrets.STAGING_DB_USERNAME }}" >> .env
            echo "DB_PASSWORD=${{ secrets.STAGING_DB_PASSWORD }}" >> .env
            echo "DB_DATABASE=${{ secrets.STAGING_DB_DATABASE }}" >> .env
          fi

      - name: 🔍 Introspect current DB schema
        run: |
          echo "📥 Pulling current DB schema into schema.ts..."
          npx drizzle-kit introspect --config=drizzle.config.ts || exit 1

      - name: 🧠 Generate migration diff
        run: |
          echo "📐 Generating schema diff from code/schema.ts..."
          npx drizzle-kit generate --config=drizzle.config.ts || exit 1

      - name: 🚨 Check for destructive changes (optional, basic)
        run: |
          echo "🔎 Checking for DROP statements in generated SQL..."
          if grep -i 'drop table' ./drizzle/migrations/*.sql; then
            echo "❌ Destructive migration detected. Aborting."
            exit 1
          fi

      - name: 🚀 Push migration to DB
        run: |
          echo "Pushing schema..."
          if ! npx drizzle-kit push --config=drizzle.config.ts; then
            echo "❌ Migration failed. Check for duplicate indexes or bad schema."
            exit 1
          fi
